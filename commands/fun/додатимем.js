const { EmbedBuilder, ButtonBuilder, ActionRowBuilder } = require('discord.js')
const { ErrorBuilder } = require("../../handlers/errorBuilder.js")
const axios = require('axios');
const awaited = require('../../awaited.json')
const fs = require('fs')

module.exports = {
    name: '–¥–æ–¥–∞—Ç–∏–º–µ–º',
    desc: '–ú–∞—î—à —Å–≤—ñ–π –∫—Ä—É—Ç–∏–π –º–µ–º? –î–æ–¥–∞–π –π–æ–≥–æ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏, —ñ —è–∫—â–æ –ª—é–¥—è–º —Å–ø–æ–¥–æ–±–∞—î—Ç—å—Å—è —Ç–≤—ñ–π –º–µ–º, —Ç–æ –≤—ñ–Ω –ø–æ–ø–∞–¥–µ –¥–æ –∫–æ–º–∞–Ω–¥–∏ —É–∫—Ä–º–µ–º–∏!',
    run: async(client, message, args) => {
        if (message.attachments.size === 0) {   
            return 
        }
        const like = new ButtonBuilder()
        .setLabel('üëç')
        .setCustomId('like')
        .setStyle('Success')
        const dislike = new ButtonBuilder()
        .setLabel('üëé')
        .setCustomId('dislike')
        .setStyle('Danger')
        const row = new ActionRowBuilder()
            .addComponents(like, dislike)
        let allow;
        axios.get('https://api.sightengine.com/1.0/check-workflow.json', {
            params: {
                'url': message.attachments.first().url,
                'workflow': 'wfl_dtTPSbyLkfSeK7qHU6f7W',
                'api_user': '1414006335',
                'api_secret': 'xnvafgREnjXWzzBxYD3F'
            }
        }).then(function (response) {
            console.log(response.data)
            if(response.data.summary.action === "reject") {
                return ErrorBuilder(message, '–≤—ñ–¥–ø–æ–≤—ñ–¥—å', null, `–ë–æ—Ç –∑–∞–±–æ—Ä–æ–Ω—è—î –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ NSFW –∫–æ–Ω—Ç–µ–Ω—Ç –∞–±–æ –Ω–∞—Ü–∏—Å—Ç—Å—å–∫—É —Å–∏–º–≤–æ–ª—ñ–∫—É —É –º–µ–º–∞—Ö`)
            } else {
        let descr;
        if (args[0]) {
            descr = args.join(' ')
        } else {
            descr = null
        }
        const embed = new EmbedBuilder()
        .setTitle('–ú–µ–º –Ω–∞–¥—ñ—Å–ª–∞–≤ ' + message.author.tag + ' –∑ —Å–µ—Ä–≤–µ—Ä—É ' + message.guild.name)
        .setDescription(descr)
        .setColor("Random")
        .setImage(message.attachments.first().url)
        .setFooter({text:`${client.user.username}`, iconURL:client.user.displayAvatarURL()})
        const raidID = '948961551954632714'
        const channel = client.users.cache.get(raidID)
        channel.send({embeds:[embed], components:[row]}).then(msg => {
        console.log(msg.id)
        message.reply({
            embeds:[
                new EmbedBuilder()
                .setTitle('–¢–≤—ñ–π –º–µ–º –±—É–ª–æ —É—Å–ø—ñ—à–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –¥–æ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞')
                .setColor("Green")
                .setDescription(`–Ø–∫—â–æ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Ç–≤—ñ–π –º–µ–º, —Ç–æ –≤—ñ–Ω –±—É–¥–µ –¥–æ–¥–∞–Ω–∏–π –¥–æ –æ—Ñ—ñ—Ü—ñ–π–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä—É Ukrainian Bot, –ø—ñ—Å–ª—è —á–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏ –±—É–¥–µ –≤–∏—Ä—ñ—à–µ–Ω–æ —á–∏ –±—É–¥–µ –≤—ñ–Ω –¥–æ–¥–∞–Ω–∏–π –¥–æ –∫–æ–º–∞–Ω–¥–∏ \`ua! –º–µ–º–∏\``)
                .setFooter({text:`–ó–∞–¥–∞–≤ ${message.author.username}`, iconURL:message.author.displayAvatarURL({dynamic: true})})
            ]
        })
        const picture = message.attachments.first().url
        fs.readFile("./awaited.json", "utf8", function(err, jsonString) {
            if(err) {
                return console.log(err)
            }
            let data = JSON.parse(jsonString)
            let newData = {
                [msg.id]: { 
                    title: `–ú–µ–º –Ω–∞–¥—ñ—Å–ª–∞–≤ ${message.author.tag} –∑ —Å–µ—Ä–≤–µ—Ä—É ${message.guild.name}`,
                    description: descr,
                    userid: message.author.id,
                    image: picture
                }
            }
            const updatedData = { ...data, ...newData}
            fs.writeFile("./awaited.json", JSON.stringify(updatedData), function(err) {
                if(err) return console.log(err)
            })
        })
    })
    }
})
    }
}